{"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\IdentityParser.ts":{"path":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\IdentityParser.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":14,"column":4}},"1":{"start":{"line":3,"column":24},"end":{"line":8,"column":5}},"2":{"start":{"line":4,"column":8},"end":{"line":6,"column":110}},"3":{"start":{"line":5,"column":69},"end":{"line":5,"column":85}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":107}},"5":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"6":{"start":{"line":6,"column":95},"end":{"line":6,"column":107}},"7":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"8":{"start":{"line":9,"column":4},"end":{"line":13,"column":6}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":28}},"10":{"start":{"line":11,"column":24},"end":{"line":11,"column":45}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":93}},"12":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"15":{"start":{"line":19,"column":22},"end":{"line":19,"column":65}},"16":{"start":{"line":27,"column":36},"end":{"line":51,"column":26}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":38}},"18":{"start":{"line":30,"column":20},"end":{"line":30,"column":61}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":46}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":21}},"21":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"23":{"start":{"line":37,"column":4},"end":{"line":49,"column":6}},"24":{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":87}},"26":{"start":{"line":43,"column":12},"end":{"line":43,"column":77}},"27":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"28":{"start":{"line":46,"column":12},"end":{"line":46,"column":77}},"29":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"30":{"start":{"line":50,"column":4},"end":{"line":50,"column":26}},"31":{"start":{"line":52,"column":0},"end":{"line":52,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":45},"end":{"line":2,"column":46}},"loc":{"start":{"line":2,"column":57},"end":{"line":14,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"loc":{"start":{"line":3,"column":40},"end":{"line":8,"column":5}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":51},"end":{"line":5,"column":52}},"loc":{"start":{"line":5,"column":67},"end":{"line":5,"column":87}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":6,"column":12},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":109}},"line":6},"4":{"name":"(anonymous_4)","decl":{"start":{"line":9,"column":11},"end":{"line":9,"column":12}},"loc":{"start":{"line":9,"column":27},"end":{"line":13,"column":5}},"line":9},"5":{"name":"__","decl":{"start":{"line":11,"column":17},"end":{"line":11,"column":19}},"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":47}},"line":11},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":54},"end":{"line":51,"column":1}},"line":27},"8":{"name":"IdentityParser","decl":{"start":{"line":29,"column":13},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":44},"end":{"line":33,"column":5}},"line":29},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":37},"end":{"line":34,"column":38}},"loc":{"start":{"line":34,"column":53},"end":{"line":36,"column":5}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":37,"column":49},"end":{"line":37,"column":50}},"loc":{"start":{"line":37,"column":95},"end":{"line":49,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":14,"column":4}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":14,"column":4}}],"line":2},"1":{"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":109}},"type":"binary-expr","locations":[{"start":{"line":4,"column":24},"end":{"line":4,"column":45}},{"start":{"line":5,"column":13},"end":{"line":5,"column":47}},{"start":{"line":5,"column":51},"end":{"line":5,"column":87}},{"start":{"line":6,"column":12},"end":{"line":6,"column":109}}],"line":4},"2":{"loc":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"type":"if","locations":[{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},{"start":{"line":6,"column":47},"end":{"line":6,"column":107}}],"line":6},"3":{"loc":{"start":{"line":12,"column":22},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":35},"end":{"line":12,"column":51}},{"start":{"line":12,"column":55},"end":{"line":12,"column":91}}],"line":12},"4":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"5":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"6":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"7":{"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":61}},"type":"binary-expr","locations":[{"start":{"line":30,"column":20},"end":{"line":30,"column":53}},{"start":{"line":30,"column":57},"end":{"line":30,"column":61}}],"line":30},"8":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":7,"19":7,"20":7,"21":1,"22":6,"23":1,"24":1,"25":1,"26":0,"27":1,"28":0,"29":1,"30":1,"31":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":1,"8":7,"9":6,"10":1},"b":{"0":[1,1,1],"1":[1,0,0,0],"2":[0,0],"3":[0,1],"4":[1,1,1],"5":[1,0],"6":[1,1],"7":[7,7],"8":[0,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\IdentityParser.ts","sources":["C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\IdentityParser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,kEAA4C;AAG5C;;;;;;GAMG;AACH;IAA4C,kCAAa;IAErD,wBAAsB,cAAsB;QAA5C,YACI,kBAAM,cAAc,CAAC,SACxB;QAFqB,oBAAc,GAAd,cAAc,CAAQ;;IAE5C,CAAC;IAED,8BAAK,GAAL,UAAM,IAAY;QACd,OAAO,IAAI,CAAC,UAAU,EAAE,CAAA;IAC5B,CAAC;IAES,0CAAiB,GAA3B,UAA4B,IAAY,EAAE,YAAoB,EAAE,cAAsB;QAClF,IAAI,UAAkB,CAAA;QACtB,IAAI;YACA,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAA;SAC7E;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAA;SACnE;QACD,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAA;SACnE;QACD,OAAO,UAAU,CAAA;IACrB,CAAC;IAEL,qBAAC;AAAD,CAAC,AAvBD,CAA4C,uBAAa,GAuBxD","sourcesContent":["import AStringParser from \"./AStringParser\";\nimport PHFile from \"./PHFile\";\n\n/**\n * Parses the file by simply returning its content.\n * \n * Could be used in implementation if we're really low on time,\n * but likely just for testing purposes.\n * I am most likely going to pull some info out from here into an abstract class.\n */\nexport default class IdentityParser extends AStringParser {\n\n    constructor(protected minMatchLength: number) {\n        super(minMatchLength)\n    }\n\n    parse(file: PHFile): string {\n        return file.getContent()\n    }\n\n    protected getSubstringIndex(file: PHFile, parseFeature: string, afterThisIndex: number) {\n        let firstIndex: number\n        try {\n            firstIndex = file.getParsedContent().indexOf(parseFeature, afterThisIndex)\n        } catch (error) {\n            throw new Error(\"Parsed content of file is not of type string.\")\n        }\n        if (firstIndex === -1) {\n            throw new Error(\"Parse feature not contained in file contents.\")\n        }\n        return firstIndex\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"85e8138a603f333a758090c975042da955ec1298","contentHash":"6c6ce515dd8f0680c9ffe18b2e0ad1eb9b4f3c07a5bf7236fb355275088129f7"},"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\AStringParser.ts":{"path":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\AStringParser.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":24},"end":{"line":6,"column":69}},"4":{"start":{"line":14,"column":35},"end":{"line":62,"column":3}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":45}},"6":{"start":{"line":18,"column":4},"end":{"line":29,"column":6}},"7":{"start":{"line":19,"column":25},"end":{"line":19,"column":27}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"9":{"start":{"line":21,"column":23},"end":{"line":21,"column":81}},"10":{"start":{"line":22,"column":29},"end":{"line":22,"column":30}},"11":{"start":{"line":23,"column":8},"end":{"line":27,"column":9}},"12":{"start":{"line":23,"column":25},"end":{"line":23,"column":26}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":88}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":140}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":32}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"17":{"start":{"line":33,"column":4},"end":{"line":60,"column":6}},"18":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"19":{"start":{"line":35,"column":12},"end":{"line":35,"column":132}},"20":{"start":{"line":37,"column":18},"end":{"line":37,"column":39}},"21":{"start":{"line":38,"column":18},"end":{"line":38,"column":39}},"22":{"start":{"line":39,"column":24},"end":{"line":39,"column":34}},"23":{"start":{"line":40,"column":28},"end":{"line":40,"column":30}},"24":{"start":{"line":42,"column":24},"end":{"line":42,"column":25}},"25":{"start":{"line":44,"column":8},"end":{"line":58,"column":9}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":50}},"27":{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},"28":{"start":{"line":48,"column":16},"end":{"line":51,"column":17}},"29":{"start":{"line":50,"column":20},"end":{"line":50,"column":37}},"30":{"start":{"line":52,"column":16},"end":{"line":52,"column":86}},"31":{"start":{"line":53,"column":16},"end":{"line":53,"column":41}},"32":{"start":{"line":56,"column":16},"end":{"line":56,"column":31}},"33":{"start":{"line":59,"column":8},"end":{"line":59,"column":29}},"34":{"start":{"line":61,"column":4},"end":{"line":61,"column":25}},"35":{"start":{"line":63,"column":0},"end":{"line":63,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":35},"end":{"line":14,"column":36}},"loc":{"start":{"line":14,"column":47},"end":{"line":62,"column":1}},"line":14},"2":{"name":"AStringParser","decl":{"start":{"line":15,"column":13},"end":{"line":15,"column":26}},"loc":{"start":{"line":15,"column":43},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":38},"end":{"line":18,"column":39}},"loc":{"start":{"line":18,"column":68},"end":{"line":29,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":48},"end":{"line":33,"column":49}},"loc":{"start":{"line":33,"column":66},"end":{"line":60,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":73}},"type":"binary-expr","locations":[{"start":{"line":21,"column":24},"end":{"line":21,"column":67}},{"start":{"line":21,"column":71},"end":{"line":21,"column":73}}],"line":21},"4":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"5":{"loc":{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},{"start":{"line":46,"column":12},"end":{"line":57,"column":13}}],"line":46},"6":{"loc":{"start":{"line":48,"column":23},"end":{"line":49,"column":58}},"type":"binary-expr","locations":[{"start":{"line":48,"column":23},"end":{"line":48,"column":86}},{"start":{"line":49,"column":23},"end":{"line":49,"column":58}}],"line":48}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":7,"6":1,"7":3,"8":3,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":1,"18":3,"19":0,"20":3,"21":3,"22":3,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1},"f":{"0":1,"1":1,"2":7,"3":3,"4":3},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,3],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\AStringParser.ts","sources":["C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\AStringParser.ts"],"names":[],"mappings":";;;;;AAEA,sEAAgD;AAEhD;;;;;;GAMG;AACH;IAEI,uBAAsB,cAAsB;QAAtB,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAIhD,+BAAO,GAAP,UAAQ,YAAoB,EAAE,IAAY;QACtC,IAAI,UAAU,GAAsB,EAAE,CAAA;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;QACvB,IAAI,QAAQ,GAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAA;QACjF,IAAI,cAAc,GAAG,CAAC,CAAA,CAAE,2DAA2D;QACnF,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,EAAE,KAAK,EAAE,EAAE;YAC3C,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,CAAC,CAAA;YAC3E,UAAU,CAAC,IAAI,CAAC,IAAI,yBAAe,CAC/B,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,mBAAmB,EAAE,EAC1B,cAAc,EACd,YAAY,CAAC,CAAC,CAAA;YAClB,cAAc,IAAI,CAAC,CAAA,CAAE,uDAAuD;SAC/E;QACD,OAAO,UAAU,CAAA;IACrB,CAAC;IAcD;;OAEG;IACH,yCAAiB,GAAjB,UAAkB,EAAU,EAAE,EAAU;QACpC,IAAI,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,YAAY,EAAE,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,oDACV,EAAE,CAAC,YAAY,EAAE,UAAK,EAAE,CAAC,YAAY,EAAE,MAAG,CAAC,CAAA;SACpD;QAED,IAAI,GAAG,GAAW,EAAE,CAAC,gBAAgB,EAAE,CAAA;QACvC,IAAI,GAAG,GAAW,EAAE,CAAC,gBAAgB,EAAE,CAAA;QACvC,IAAI,SAAS,GAAW,GAAG,CAAC,MAAM,CAAA;QAClC,IAAI,aAAa,GAAa,EAAE,CAAA;QAChC,IAAI,WAAmB,CAAA;QACvB,IAAI,SAAS,GAAW,CAAC,CAAA;QAEzB,sDAAsD;QACtD,OAAO,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE;YAChD,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA;YACrC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC,CAAC,EAAE;gBAEjE,8DAA8D;gBAC9D,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC,CAAC;uBAC3D,SAAS,GAAG,WAAW,GAAG,SAAS,EAAE;oBAC5C,WAAW,IAAI,CAAC,CAAA;iBACnB;gBACD,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC,CAAC,CAAA;gBACrE,SAAS,IAAI,WAAW,CAAA,CAAE,+CAA+C;aAC5E;iBAAM;gBACH,SAAS,IAAI,CAAC,CAAA,CAAE,2BAA2B;aAC9C;SACJ;QACD,OAAO,aAAa,CAAA;IACxB,CAAC;IAEL,oBAAC;AAAD,CAAC,AAtED,IAsEC","sourcesContent":["import IParser from \"./IParser\";\nimport PHFile from \"./PHFile\";\nimport PHFileSubstring from \"./PHFileSubstring\";\n\n/**\n * Parses the file by simply returning its content.\n * \n * Could be used in implementation if we're really low on time,\n * but likely just for testing purposes.\n * I am most likely going to pull some info out from here into an abstract class.\n */\nexport default abstract class AStringParser implements IParser<string> {\n\n    constructor(protected minMatchLength: number) {}\n\n    abstract parse(file: PHFile): string\n\n    unparse(parseFeature: string, file: PHFile): PHFileSubstring[] {\n        let substrings: PHFileSubstring[] = []\n        file.acceptParser(this)\n        let numMatch: number = (file.getParsedContent().match(parseFeature) || []).length\n        let substringIndex = 0  //when is the earliest index we are looking for this match?\n        for (let match = 0; match < numMatch; match++) {\n            substringIndex = this.getSubstringIndex(file, parseFeature, substringIndex)\n            substrings.push(new PHFileSubstring(\n                file.getProgramName(),\n                file.getNameAndExtension(),\n                substringIndex,\n                parseFeature))\n            substringIndex += 1  // start next search after start index of current match\n        }\n        return substrings\n    }\n\n    /**\n     * Finds the first index of a substring in this file that parses down to the parse feature.\n     * \n     * @param file a PHFile that has a string as its parsed content.\n     * @param parseFeature a string contained within the parsed content of the file.\n     * @param afterThisIndex the index of the file where we start looking for the substring.\n     * @throws Error if no part of the given file's parsed content contains parse feature.\n     * @throws TypeError if either of the PHFile's parsed contents are not of type T\n     *  or if they are undefined.\n     */\n    protected abstract getSubstringIndex(file: PHFile, parseFeature: string, afterThisIndex: number): any\n    \n    /**\n     * Finds all similar strings of length at least this.minMatchLength between file contents.\n     */\n    findParsedMatches(f1: PHFile, f2: PHFile): string[] {\n        if (f1.getExtension() !== f2.getExtension()) {\n            throw new Error(`Input are of different types:\n                ${f1.getExtension()}, ${f2.getExtension()}.`)\n        }\n\n        let f1c: string = f1.getParsedContent()\n        let f2c: string = f2.getParsedContent()\n        let f1clength: number = f1c.length\n        let parsedMatches: string[] = []\n        let windowWidth: number\n        let startChar: number = 0\n\n        // iterate through windows of size this.minMatchLength\n        while (startChar < f1clength - this.minMatchLength) {\n            windowWidth = this.minMatchLength - 1\n            if (f2c.includes(f1c.substring(startChar, startChar + windowWidth))) {\n\n                // if a match is found for a window, keep increasing the width\n                while (f2c.includes(f1c.substring(startChar, startChar + windowWidth))\n                        && startChar + windowWidth < f1clength) {\n                    windowWidth += 1\n                }\n                parsedMatches.push(f1c.substring(startChar, startChar + windowWidth))\n                startChar += windowWidth  // we don't want to find duplicate similarities\n            } else {\n                startChar += 1  //move onto the next window\n            }\n        }\n        return parsedMatches\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"23301c0e5fac90fe88e8913cc852afc029b90ea2","contentHash":"0e727d30215c11b40107fd2c33bdb10b8a675f8e03340592504bf406fecae80a"},"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFileSubstring.ts":{"path":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFileSubstring.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":37},"end":{"line":38,"column":3}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":39}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":57}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":37}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"6":{"start":{"line":16,"column":4},"end":{"line":18,"column":6}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":41}},"8":{"start":{"line":22,"column":4},"end":{"line":24,"column":6}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":32}},"10":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":31}},"12":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":30}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}},"15":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":37},"end":{"line":6,"column":38}},"loc":{"start":{"line":6,"column":49},"end":{"line":38,"column":1}},"line":6},"1":{"name":"PHFileSubstring","decl":{"start":{"line":7,"column":13},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":87},"end":{"line":12,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":56},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":68},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":47},"end":{"line":22,"column":48}},"loc":{"start":{"line":22,"column":59},"end":{"line":24,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":46},"end":{"line":28,"column":47}},"loc":{"start":{"line":28,"column":58},"end":{"line":30,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":45},"end":{"line":34,"column":46}},"loc":{"start":{"line":34,"column":57},"end":{"line":36,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFileSubstring.ts","sources":["C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFileSubstring.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IAEI,yBAAoB,WAAmB,EAC3B,oBAA4B,EAC5B,UAAkB,EAClB,SAAiB;QAHT,gBAAW,GAAX,WAAW,CAAQ;QAC3B,yBAAoB,GAApB,oBAAoB,CAAQ;QAC5B,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAEjC;;OAEG;IACH,iDAAuB,GAAvB;QACI,OAAO,IAAI,CAAC,oBAAoB,CAAA;IACpC,CAAC;IAED;;OAEG;IACH,wCAAc,GAAd;QACI,OAAO,IAAI,CAAC,WAAW,CAAA;IAC3B,CAAC;IAED;;OAEG;IACH,uCAAa,GAAb;QACI,OAAO,IAAI,CAAC,UAAU,CAAA;IAC1B,CAAC;IAED;;OAEG;IACH,sCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;IAEL,sBAAC;AAAD,CAAC,AAnCD,IAmCC","sourcesContent":["import PHFile from \"./PHFile\";\n\n/**\n * A (contiguous) substring of a PHFile in a CodeSet.\n */\nexport default class PHFileSubstring {\n\n    constructor(private programName: string,\n        private fileNameAndExtension: string,\n        private startIndex: number,\n        private rawString: string) {}\n\n    /**\n     * Returns the name of the file implicated in this similarity.\n     */\n    getFileNameAndExtension(): string {\n        return this.fileNameAndExtension\n    }\n\n    /**\n     * Returns the name of the program that the file is in.\n     */\n    getProgramName(): string {\n        return this.programName\n    }\n\n    /**\n     * Returns the index of the character in the file that the similarity begins at.\n     */\n    getStartIndex(): number {\n        return this.startIndex\n    }\n\n    /**\n     * Returns the substring of the file found to be similar to others.\n     */\n    getRawString(): string {\n        return this.rawString\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3324c373e71f81d952ff86ce5bc54ea225279ae","contentHash":"f57c7cc6b9fddea4fe79a20ccdb80efeb83a39268956190cdccd85e9251d92f7"},"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFile.ts":{"path":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFile.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":12,"column":28},"end":{"line":82,"column":3}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"5":{"start":{"line":21,"column":4},"end":{"line":23,"column":6}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":6}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":30}},"9":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"10":{"start":{"line":35,"column":8},"end":{"line":35,"column":42}},"11":{"start":{"line":41,"column":4},"end":{"line":46,"column":6}},"12":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"13":{"start":{"line":43,"column":12},"end":{"line":43,"column":105}},"14":{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},"15":{"start":{"line":50,"column":4},"end":{"line":55,"column":6}},"16":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":78}},"18":{"start":{"line":54,"column":8},"end":{"line":54,"column":32}},"19":{"start":{"line":59,"column":4},"end":{"line":61,"column":6}},"20":{"start":{"line":60,"column":8},"end":{"line":60,"column":28}},"21":{"start":{"line":67,"column":4},"end":{"line":74,"column":6}},"22":{"start":{"line":68,"column":8},"end":{"line":73,"column":9}},"23":{"start":{"line":69,"column":12},"end":{"line":69,"column":52}},"24":{"start":{"line":72,"column":12},"end":{"line":72,"column":61}},"25":{"start":{"line":78,"column":4},"end":{"line":80,"column":6}},"26":{"start":{"line":79,"column":8},"end":{"line":79,"column":34}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":18}},"28":{"start":{"line":83,"column":0},"end":{"line":83,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":28},"end":{"line":12,"column":29}},"loc":{"start":{"line":12,"column":40},"end":{"line":82,"column":1}},"line":12},"1":{"name":"PHFile","decl":{"start":{"line":13,"column":13},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":46},"end":{"line":17,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":43},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":48},"end":{"line":29,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":43},"end":{"line":34,"column":44}},"loc":{"start":{"line":34,"column":55},"end":{"line":36,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":38},"end":{"line":41,"column":39}},"loc":{"start":{"line":41,"column":61},"end":{"line":46,"column":5}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":38},"end":{"line":50,"column":39}},"loc":{"start":{"line":50,"column":50},"end":{"line":55,"column":5}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":34},"end":{"line":59,"column":35}},"loc":{"start":{"line":59,"column":46},"end":{"line":61,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":36},"end":{"line":67,"column":37}},"loc":{"start":{"line":67,"column":54},"end":{"line":74,"column":5}},"line":67},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":40},"end":{"line":78,"column":41}},"loc":{"start":{"line":78,"column":52},"end":{"line":80,"column":5}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"1":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"2":{"loc":{"start":{"line":68,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":73,"column":9}},{"start":{"line":68,"column":8},"end":{"line":73,"column":9}}],"line":68}},"s":{"0":1,"1":1,"2":15,"3":15,"4":15,"5":1,"6":1,"7":1,"8":7,"9":1,"10":1,"11":1,"12":2,"13":1,"14":1,"15":1,"16":3,"17":2,"18":1,"19":1,"20":8,"21":1,"22":6,"23":3,"24":3,"25":1,"26":9,"27":1,"28":1},"f":{"0":1,"1":15,"2":1,"3":7,"4":1,"5":2,"6":3,"7":8,"8":6,"9":9},"b":{"0":[1,1],"1":[2,1],"2":[3,3]},"inputSourceMap":{"version":3,"file":"C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFile.ts","sources":["C:\\Users\\samig\\Documents\\TypeScriptPrograms\\Team-01-master\\team-01\\src\\model\\PHFile.ts"],"names":[],"mappings":";;AAEA;;;;;;;;GAQG;AACH;IAII,gBAAoB,IAAY,EAAU,SAAiB,EAAU,OAAe;QAAhE,SAAI,GAAJ,IAAI,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAExF;;OAEG;IACH,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,CAAA;IACpB,CAAC;IAED;;OAEG;IACH,6BAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;IAED;;;OAGG;IACH,oCAAmB,GAAnB;QACI,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAA;IACrC,CAAC;IAED;;;OAGG;IACH,+BAAc,GAAd,UAAe,WAAmB;QAC9B,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,qDAAmD,IAAI,CAAC,WAAW,MAAG,CAAC,CAAA;SAC1F;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;IAClC,CAAC;IAED;;OAEG;IACH,+BAAc,GAAd;QACI,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAA;SACpE;QACD,OAAO,IAAI,CAAC,WAAW,CAAA;IAC3B,CAAC;IAED;;OAEG;IACH,2BAAU,GAAV;QACI,OAAO,IAAI,CAAC,OAAO,CAAA;IACvB,CAAC;IAED;;;;OAIG;IACH,6BAAY,GAAZ,UAAa,MAAoB;QAC7B,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;SAC1C;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;SACnD;IACL,CAAC;IAED;;OAEG;IACH,iCAAgB,GAAhB;QACI,OAAO,IAAI,CAAC,aAAa,CAAA;IAC7B,CAAC;IACL,aAAC;AAAD,CAAC,AA3ED,IA2EC","sourcesContent":["import IParser from \"./IParser\"\n\n/**\n * Our internal representation of an imported file.\n * \n * More formally, a file in a Program being compared against others for\n * plagiarism by an IPlagiahedronGenerator. This means that a file can store\n * a parsed version of itself. Once this parsed version is set,\n * it cannot be un-set. When this file is added to a Program, its programName\n * field is set, and cannot be unset.\n */\nexport default class PHFile {\n    private parsedContent: any\n    private programName?: string\n\n    constructor(private name: string, private extension: string, private content: string) {}\n\n    /**\n     * Returns private field name of PHFile.\n     */\n    getName(): string {\n        return this.name\n    }\n\n    /**\n     * Returns priavte field extension of PHFile.\n     */\n    getExtension(): string {\n        return this.extension\n    }\n\n    /**\n     * Returns a string with both name and extension of PHFile.\n     * If a file is named \"f.ts\", the name will be \"f\" and the extension will be \".ts\".\n     */\n    getNameAndExtension(): string {\n        return this.name + this.extension\n    }\n\n    /**\n     * @param programName the name of the program this file is being made a part of.\n     * @throws an error if the name is already defined.\n     */\n    setProgramName(programName: string) {\n        if (this.programName !== undefined) {\n            throw new Error(`This file has already been given to the program ${this.programName}.`)\n        }\n        this.programName = programName\n    }\n\n    /**\n     * @throws an error if the name isn't defined.\n     */\n    getProgramName(): string {\n        if (this.programName === undefined) {\n            throw new Error(\"This file has not yet been given to a Program.\")\n        }\n        return this.programName\n    }\n\n    /**\n     * Gets the contents of this file.\n     */\n    getContent(): string {\n        return this.content\n    }\n\n    /**\n     * Parses this file and stores the result, if this hasn't already happened.\n     * @param parser an IParser that produces any type from this file.\n     * @throws Error if attempting to re-parse content.\n     */\n    acceptParser(parser: IParser<any>) {\n        if (this.parsedContent === undefined) {\n            this.parsedContent = parser.parse(this)\n        } else {\n            throw new Error(\"Attempted to re-parse a file.\")\n        }\n    }\n\n    /**\n     * Returns the parsed content associated with this file.\n     */\n    getParsedContent(): any {\n        return this.parsedContent\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9a81d1b42e532bf24c81c0168362897fa6d66898","contentHash":"eea2a567dbb56d6ee141e079258f0938991c35edaf378bec8b9d10d5fb06c857"}}
